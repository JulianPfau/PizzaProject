/*
    File with all functions for menu


 */




/**
 *  Requests an Array with all image files from the "/menu/img" dir of the server
 **/
function listImages() {
    var xhttp = new XMLHttpRequest();
    var req = new Object();
    var res;

    xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            res = this.response;
        }
    };

    xhttp.open("POST", "https://localhost:8080", false);
    xhttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    req.request = "images";
    var data = JSON.stringify(req);
    xhttp.send(data);
    return res;
}

/**
 * Creates a dropdown list for selecting images for the corresponding object.
 * The dropdown content is generated by the input of users and work with the first letters of the image names.
 * Parameter
 * @param HTML-object of the input field
 **/

function pictureSelection(param) {

    var a, b = this.value;
    var arrPictures = [];
    var input = param.value;
    var images = JSON.parse(listImages());
    closeAllLists();

    for (var i = 0; i < images.length; i++) {
        if (images[i].startsWith(input)) {
            arrPictures.push(images[i]);
        }
    }

    a = document.createElement("DIV");
    a.setAttribute("id", this.id + "autocomplete-list");
    a.setAttribute("class", "autocomplete-items");

    param.parentNode.appendChild(a);

    for (var i = 0; i < arrPictures.length; i++) {
        b = document.createElement("DIV");
        //Marks in the list of picture the input bold
        b.innerHTML = "<strong>" + arrPictures[i].substr(0, input.length) + "</strong>";
        b.innerHTML += arrPictures[i].substr(input.length);
        //Adds value to be read later
        b.innerHTML += "<input type='hidden' value='" + arrPictures[i] + "'>";
        //Change on Click the picture path
        b.addEventListener("click", function (e) {
            this.parentElement.parentElement.getElementsByTagName("input")[0].style.backgroundColor = "#FFC107"
            //Change bg-color of input field to indicate change
            param.value = this.getElementsByTagName("input")[0].value;
            //Set value of input field in table to the image name
            var parent = param.parentElement.parentElement;
            var cols = parent.children;
            var img = cols[cols.length - 2].firstChild;
            img.src = "../img/menu/" + param.value; //set the image src of the image in the table to the new path
            closeAllLists(); // call function to "close" the list of images
        });

        a.appendChild(b); // append the image list to the outer div container
    }

    /*
    *   Funktion damit alle Elemente des Bilder Dropdowns gel√∂scht werden.
    *
     */

    /**
     * Delete all entries from "imagelist"
     * @param elmnt html object of the input field of the table row
     */

    function closeAllLists(elmnt) {
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) { //delete every child of the autocomplete-items div
            if (elmnt != x[i] && elmnt != input) {
                x[i].parentNode.removeChild(x[i]);
            }
        }
    }

}


/**
 * Create extra columns to edit the images of the menu entries
 */

function extendTable() {
    var elements = document.getElementsByClassName("tr menuElement");
    var headCol = document.createElement("div"); // create and append header "pictureSelection" to the table
    headCol.setAttribute("name", "pictureSelection");
    headCol.setAttribute("class", "td");
    headCol.innerHTML = "Picture selection";
    document.getElementById('head').appendChild(headCol);

    for (var i = 0; i < elements.length; i++) { //loop every table row
        var elRow = document.createElement("div"); //create div to display the images
        var input = document.createElement("input"); // create input to edit pictures

        elRow.setAttribute("class", "td");
        elRow.setAttribute("id", "autocomplete");
        elRow.style.position = "relative";

        input.setAttribute("class", "input");
        input.setAttribute("id", "pictureSelection");
        input.setAttribute('oninput', 'pictureSelection(this)');

        var img = elements[i].children[elements[i].children.length - 1];

        var value = img.firstChild.src.split("/");
        input.value = value[value.length - 1];


        elRow.appendChild(input);
        elements[i].appendChild(elRow);

    }

}



function savePopup(btn) {
    var modal = btn.parentElement.parentElement.getElementsByClassName("modal-body")[0];
    var list = modal.getElementsByTagName("label");
    //console.log(getJsonByRequest(null,"extras"));
    var extras = [];
    var index = modal.getElementsByTagName("ul")[0].getAttribute('name');
    for (var i = 0; i < list.length; i++) {
        if (list[i].firstChild.checked) {
            extras.push(parseInt(list[i].firstChild.id));
        }
    }
    var row = document.getElementsByClassName("tr menuElement")[index].children;
    for (var n = 0; n < row.length; n++) {
        if (row[n].firstChild != null && row[n].firstChild.id.toLowerCase() == "extras") {
            var input = row[n].firstChild;
            var onclickString = input.getAttribute('onclick').toString().split('loadExtras(');
            var paramString = onclickString[1].split("},")[0] + "}";
            var object = JSON.parse(paramString);
            object.extras = extras;
            var param = JSON.stringify(object);
            var fnstr = onclickString[0] + "loadExtras(" + param + "," + index + ")";
            input.setAttribute('onclick', fnstr);
            input.innerHTML = splitArray(object.extras).replace(/\s/g, '');

        }

    }
    document.getElementById("closeModal").click();


}